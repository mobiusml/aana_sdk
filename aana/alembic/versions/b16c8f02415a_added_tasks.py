"""Added tasks.

Revision ID: b16c8f02415a
Revises: 0918cb09ac67
Create Date: 2024-06-05 13:43:30.706826

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b16c8f02415a"
down_revision: str | None = "0918cb09ac67"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade database to this revision from previous."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tasks",
        sa.Column("id", sa.UUID(), nullable=False, comment="Task ID"),
        sa.Column(
            "endpoint",
            sa.String(),
            nullable=False,
            comment="The endpoint to which the task is assigned",
        ),
        sa.Column("data", sa.PickleType(), nullable=False, comment="Data for the task"),
        sa.Column(
            "status",
            sa.Enum(
                "CREATED", "ASSIGNED", "COMPLETED", "RUNNING", "FAILED", name="status"
            ),
            nullable=False,
            comment="Status of the task",
        ),
        sa.Column(
            "priority",
            sa.Integer(),
            nullable=False,
            comment="Priority of the task (0 is the lowest)",
        ),
        sa.Column(
            "assigned_at",
            sa.DateTime(),
            nullable=True,
            comment="Timestamp when the task was assigned",
        ),
        sa.Column(
            "completed_at",
            sa.DateTime(),
            nullable=True,
            comment="Timestamp when the task was completed",
        ),
        sa.Column(
            "progress",
            sa.Float(),
            nullable=False,
            comment="Progress of the task in percentage",
        ),
        sa.Column(
            "result",
            sa.JSON(),
            nullable=True,
            comment="Result of the task in JSON format",
        ),
        sa.Column(
            "create_ts",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
            comment="Timestamp when row is inserted",
        ),
        sa.Column(
            "update_ts",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Timestamp when row is updated",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tasks")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database from this revision to previous."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tasks")
    # ### end Alembic commands ###
