from __future__ import annotations  # Let classes use themselves in type annotations

import typing

from sqlalchemy import JSON, CheckConstraint, Column, Float, ForeignKey, Integer, String
from sqlalchemy.orm import relationship

from aana.configs.db import MediaIdSqlType, media_id_type
from aana.models.db.base import BaseEntity, TimeStampEntity


class TimelineEntity(BaseEntity, TimeStampEntity):
    """ORM model for the combined video timeline."""

    __tablename__ = "timeline"

    id = Column(Integer, autoincrement=True, primary_key=True)  # noqa: A003
    models = Column(JSON, comment="List of models used to generate the timeline")
    media_id = Column(
        MediaIdSqlType,
        ForeignKey("media.id"),
        nullable=False,
        comment="Foreign key to media table",
    )
    video_id = Column(
        Integer,
        ForeignKey("video.id"),
        nullable=False,
        comment="Foreign key to video table",
    )
    timeline = Column(JSON, comment="Combined timeline of the video")

    video = relationship("VideoEntity", back_populates="timeline")
